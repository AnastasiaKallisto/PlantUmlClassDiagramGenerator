<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<LangVersion>12</LangVersion>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<EnforceExtendedAnalyzerRules>false</EnforceExtendedAnalyzerRules>
		<IsRoslynComponent>true</IsRoslynComponent>
		<AnalyzerLanguage>cs</AnalyzerLanguage>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<DevelopmentDependency>true</DevelopmentDependency>
		<IncludeSymbols>false</IncludeSymbols>
		<SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
		<TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);PackBuildOutputs</TargetsForTfmSpecificContentInPackage>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>

		<Title>PlantUmlClassDiagramGenerator.SourceGenerator</Title>
		<Authors>pierre3</Authors>
		<PackageProjectUrl>https://github.com/pierre3/PlantUmlClassDiagramGenerator/tree/feature/source-generator/src/PlantUmlClassDiagramGenerator.SourceGenerator</PackageProjectUrl>
		<RepositoryUrl>https://github.com/pierre3/PlantUmlClassDiagramGenerator/tree/feature/source-generator/src/PlantUmlClassDiagramGenerator.SourceGenerator</RepositoryUrl>
		<Description>This tool is designed to generate PlantUML class diagrams from C# source code. Leveraging SourceGenerator functionality, it analyzes the source code and produces PlantUML class diagrams.</Description>
		<Copyright>© 2024 pierre3</Copyright>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<RepositoryType>git</RepositoryType>
		<PackageTags>plantuml;SourceGenerator</PackageTags>
		<PackageReleaseNotes>[0.6.0-beta]
- Partially deprecated properties that can be configured in project files (.csproj).
  From this version onwards, only `PlantUmlGenerator_OutputDir` is configurable.
- Modified the `PlantUmlDiagramAttribute` to be applicable at the assembly level.
  When applied at the assembly level, it targets all types defined within it for output.
- Added the `PlantUmlAssociationAttribute`.
  This allows for the definition of custom associations.
- Added the `PlantUmlIgnoreAssociationAttribute`.
  Attach this attribute to members or method parameters where associations are not desired, thereby excluding them from association creation.
- Introduced the `PlantUmlExtraAssociationTargetsAttribute`.
  This allows for additional specification of types targeted for association creation.
		</PackageReleaseNotes>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<AssemblyVersion>0.6.0.0</AssemblyVersion>
		<FileVersion>0.6.0.0</FileVersion>
		<Version>0.6.0-beta</Version>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.8.0" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>
	<ItemGroup>
		<None Update="README.md">
			<PackagePath>\</PackagePath>
			<Pack>True</Pack>
		</None>
	</ItemGroup>
	<Target Name="PackBuildOutputs" DependsOnTargets="SatelliteDllsProjectOutputGroup;DebugSymbolsProjectOutputGroup">
		<ItemGroup>
			<TfmSpecificPackageFile Include="$(TargetDir)\*.dll" PackagePath="analyzers\dotnet\cs" />
			<TfmSpecificPackageFile Include="@(SatelliteDllsProjectOutputGroupOutput->'%(FinalOutputPath)')" PackagePath="analyzers\dotnet\cs\%(SatelliteDllsProjectOutputGroupOutput.Culture)\" />
		</ItemGroup>
	</Target>
</Project>